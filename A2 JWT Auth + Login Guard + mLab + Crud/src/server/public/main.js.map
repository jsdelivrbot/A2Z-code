{"version":3,"sources":["webpack:///./src/client/$_lazy_route_resource lazy namespace object","webpack:///./src/client/app/add-contact/add-contact.component.html","webpack:///./src/client/app/add-contact/add-contact.component.scss","webpack:///./src/client/app/add-contact/add-contact.component.ts","webpack:///./src/client/app/app-routing.module.ts","webpack:///./src/client/app/app.component.css","webpack:///./src/client/app/app.component.html","webpack:///./src/client/app/app.component.ts","webpack:///./src/client/app/app.module.ts","webpack:///./src/client/app/auth.guard.ts","webpack:///./src/client/app/contact-list/contact-list.component.html","webpack:///./src/client/app/contact-list/contact-list.component.scss","webpack:///./src/client/app/contact-list/contact-list.component.ts","webpack:///./src/client/app/contact/contact.component.html","webpack:///./src/client/app/contact/contact.component.scss","webpack:///./src/client/app/contact/contact.component.ts","webpack:///./src/client/app/login/login.component.html","webpack:///./src/client/app/login/login.component.scss","webpack:///./src/client/app/login/login.component.ts","webpack:///./src/client/app/menu/menu.component.html","webpack:///./src/client/app/menu/menu.component.scss","webpack:///./src/client/app/menu/menu.component.ts","webpack:///./src/client/app/shared/api.service.ts","webpack:///./src/client/app/shared/auth.service.ts","webpack:///./src/client/environments/environment.ts","webpack:///./src/client/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/client/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"add-form-container\\\">\\n  <div class=\\\"ui icon message\\\" *ngIf=\\\"newContact\\\">\\n    <i class=\\\"notched check green icon\\\"></i>\\n    <i class=\\\"close icon\\\" (click)=\\\"newContact = null\\\"></i>\\n    <div class=\\\"content\\\">\\n      <div class=\\\"header\\\">\\n        New contact added!\\n      </div>\\n      <p>Name: {{newContact.name}}</p>\\n    </div>\\n  </div>\\n  <form class=\\\"ui big form\\\" #contactForm=\\\"ngForm\\\" (submit)=\\\"onSubmit(contactForm)\\\" [class.loading]=\\\"loading\\\">\\n    <div class=\\\"fields\\\">\\n      <div class=\\\"eight wide field\\\">\\n        <label>First Name</label>\\n        <input type=\\\"text\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" ngModel>\\n      </div>\\n      <div class=\\\"eight wide field\\\">\\n        <label>Last Name</label>\\n        <input type=\\\"text\\\" placeholder=\\\"Last Name\\\" name=\\\"lastName\\\" ngModel>\\n      </div>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Address</label>\\n      <input type=\\\"text\\\" placeholder=\\\"Address\\\" name=\\\"address\\\" ngModel>\\n    </div>\\n    <div class=\\\"equal width fields\\\">\\n      <div class=\\\"field\\\">\\n        <label>Phone</label>\\n        <input type=\\\"text\\\" maxlength=\\\"5\\\" placeholder=\\\"(###)\\\" name=\\\"areaCode\\\" ngModel>\\n      </div>\\n      <div class=\\\"field\\\">\\n        <label>&nbsp;</label>\\n        <input type=\\\"text\\\" maxlength=\\\"3\\\" placeholder=\\\"###\\\" name=\\\"prefix\\\" ngModel>\\n      </div>\\n      <div class=\\\"field\\\">\\n        <label>&nbsp;</label>\\n        <input type=\\\"text\\\" maxlength=\\\"4\\\" placeholder=\\\"####\\\" name=\\\"lineNumber\\\" ngModel>\\n      </div>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Photo URL</label>\\n      <input type=\\\"text\\\" placeholder=\\\"http://cdn.com/profile.jpg\\\" name=\\\"photo\\\" ngModel>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"ui submit large grey button right floated\\\">Submit</button>\\n  </form>\\n</div>\\n\"","module.exports = \".add-form-container {\\n  max-width: 960px;\\n  margin: 50px auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Contact } from '../shared/contact.model';\nimport { ApiService } from '../shared/api.service';\n\n@Component({\n  selector: 'app-add-contact',\n  templateUrl: './add-contact.component.html',\n  styleUrls: ['./add-contact.component.scss']\n})\nexport class AddContactComponent implements OnInit {\n\n  loading: Boolean = false;\n  newContact: Contact;\n\n  constructor(public api: ApiService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgForm) {\n    this.loading = true;\n\n    const formValues = Object.assign({}, form.value);\n\n    const contact: Contact = {\n      name: `${formValues.firstName} ${formValues.lastName}`,\n      address: formValues.address,\n      phone: `${formValues.areaCode} ${formValues.prefix}-${formValues.lineNumber}`,\n      photoUrl: formValues.photo\n    };\n\n    this.api.post('contacts', contact)\n      .subscribe(data => {\n        form.reset();\n        this.loading = false;\n        this.newContact = data;\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { AddContactComponent } from './add-contact/add-contact.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'contacts',\n    pathMatch: 'full'\n  },\n  {\n    path: 'contacts',\n    component: ContactListComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'new',\n    component: AddContactComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'contacts'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"{{title}}\\n<app-menu></app-menu>\\n<router-outlet></router-outlet>\\n\\n<br>\\nhttps://stackblitz.com/edit/angular-6-jwt-authentication-example?file=app%2F_helpers%2Fjwt.interceptor.ts\\n\\n<br>https://stackblitz.com/edit/angular-6-communicating-between-components-7hsega?file=app%2F_services%2Findex.ts\\n\\n\\n<h3>This Project Arch Is like src --> Client --> app</h3><br>\\n<h3>\\n  <p> src --> Server --> index.js</p>\\n</h3>\\n<br>\\n\\n<h4>for above to happen i have made chanages in tsconfig.app.json--> \\\"extends\\\": \\\"../../tsconfig.json\\\"</h4>\\n<br>\\n<h4>and angular.json --> \\\"sourceRoot\\\": \\\"src/client\\\",</h4>\\n\\n\\n<br> Jwt Structure\\n<br>   Header --> algo + type\\n<br>   payload --> iat (issueat) + expiry + username + role\\n<br>   Structure --> encoded payload + encoded header with hmacsha256 algo with a secreat key\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular7template';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { AddContactComponent } from './add-contact/add-contact.component';\nimport { ApiService } from './shared/api.service';\nimport { AuthService } from './shared/auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent, MenuComponent,\n    ContactListComponent,\n    ContactComponent,\n    AddContactComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [ApiService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    if (this.auth.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","module.exports = \"<div class=\\\"ui container\\\">\\n  <div class=\\\"ui grid\\\">\\n    <app-contact *ngFor=\\\"let contact of contacts\\\" [contact]=\\\"contact\\\"></app-contact>\\n  </div>\\n</div>\"","module.exports = \".container {\\n  margin-top: 50px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Contact } from '../shared/contact.model';\nimport { ApiService } from '../shared/api.service';\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.scss']\n})\nexport class ContactListComponent implements OnInit {\n\n  contacts: Contact[];\n\n  constructor(public api: ApiService) { }\n\n  ngOnInit() {\n    this.api.get('contacts')\n      .subscribe(data => this.contacts = data);\n  }\n\n}\n","module.exports = \"<div class=\\\"ui card\\\">\\n  <div class=\\\"image\\\">\\n    <img [src]=\\\"contact?.photoUrl\\\">\\n  </div>\\n  <div class=\\\"content\\\">\\n    <a class=\\\"header\\\">{{contact.name}}</a>\\n    <div class=\\\"description\\\">\\n      {{contact.address}}\\n    </div>\\n  </div>\\n  <div class=\\\"extra content\\\">\\n    <span>\\n      <i class=\\\"call icon\\\"></i>\\n      {{contact.phone}}\\n    </span>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, HostBinding } from '@angular/core';\nimport { Contact } from '../shared/contact.model';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  @Input() contact: Contact;\n\n  @HostBinding('class') columnClass = 'four wide column';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"login-container\\\">\\n  <form class=\\\"ui big form\\\" #loginForm=\\\"ngForm\\\" (submit)=\\\"onSubmit(loginForm)\\\">\\n  <div class=\\\"field\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" ngModel>\\n  </div>\\n  <div class=\\\"field\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" ngModel>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"ui primary button float right floated\\\">Login</button>\\n  </form>\\n</div>\\n\"","module.exports = \".login-container {\\n  max-width: 500px;\\n  margin: 50px auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../shared/api.service';\nimport { AuthService } from '../shared/auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  constructor(private api: ApiService,\n    private auth: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    if (this.auth.isLoggedIn()) {\n      this.router.navigate(['/contacts']);\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    const values = form.value;\n\n    const payload = {\n      username: values.username,\n      password: values.password\n    };\n\n    this.api.post('authenticate', payload)\n      .subscribe(data => {\n        console.log(data);\n        this.auth.setToken(data.token);\n        this.router.navigate(['/contacts']);\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"ui menu header\\\">\\n  <div class=\\\"ui container\\\">\\n    <div class=\\\"item\\\">\\n      <a [routerLink]=\\\"['/contacts']\\\" aria-label=\\\"Contacts\\\">\\n        <i class=\\\"icon users large blue\\\" aria-hidden=\\\"true\\\"></i>\\n      </a>\\n    </div>\\n    <div class=\\\"header item\\\">\\n      <h1>Contact Manager</h1>\\n    </div>\\n    <div class=\\\"item\\\" *ngIf=\\\"auth.isLoggedIn()\\\">\\n      <button [routerLink]=\\\"['/new']\\\" class=\\\"ui basic button\\\">\\n        <i class=\\\"add user icon\\\" aria-hidden=\\\"true\\\"></i>\\n        Add Contact\\n      </button>\\n    </div>\\n    <div class=\\\"right menu\\\" *ngIf=\\\"auth.isLoggedIn()\\\">\\n      <button class=\\\"ui primary button logout\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"button.logout {\\n  margin: 10px 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/auth.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Request, RequestOptions, RequestMethod, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { Observable } from 'rxjs/Observable';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class ApiService {\n\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: Http, private auth: AuthService) { }\n\n  get(url: string) {\n    return this.request(url, RequestMethod.Get);\n  }\n\n  post(url: string, body: Object) {\n    debugger;\n    return this.request(url, RequestMethod.Post, body);\n  }\n\n  put(url: string, body: Object) {\n    return this.request(url, RequestMethod.Put, body);\n  }\n\n  delete(url: string) {\n    return this.request(url, RequestMethod.Delete);\n  }\n\n  request(url: string, method: RequestMethod, body?: Object) {\n    debugger;\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `Bearer ${this.auth.getToken()}`);\n\n    const requestOptions = new RequestOptions({\n      url: `${this.baseUrl}/${url}`,\n      method: method,\n      headers: headers\n    });\n\n    if (body) {\n      requestOptions.body = body;\n    }\n\n    const request = new Request(requestOptions);\n\n    return this.http.request(request)\n      .map((res: Response) => res.json());\n     // .catch((res: Response) => this.onRequestError(res));\n  }\n\n  onRequestError(res: Response) {\n    const statusCode = res.status;\n    const body = res.json();\n\n    const error = {\n      statusCode: statusCode,\n      error: body.error\n    };\n\n    console.log(error);\n\n    return Observable.throw(error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthService {\n\n  storageKey: string = 'contact-manager-jwt';\n\n  constructor(private router: Router) { }\n\n  setToken(token: string) {\n    localStorage.setItem(this.storageKey, token);\n  }\n\n  getToken() {\n    return localStorage.getItem(this.storageKey);\n  }\n\n  isLoggedIn() {\n    return this.getToken() !== null;\n  }\n\n  logout() {\n    localStorage.removeItem(this.storageKey);\n    this.router.navigate(['/login']);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, apiUrl: '/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error  localhost:3000\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}